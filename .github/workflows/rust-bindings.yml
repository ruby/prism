---
name: Rust Bindings

on:
  push:
    paths:
      - ".github/workflows/rust-bindings.yml"
      - "include/"
      - "src/"
      - "rust/"
      - "*akefile*"
    branches:
      - main
  pull_request:

env:
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: cargo:test
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: head
          bundler-cache: true
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.71.1"
          targets: wasm32-wasi
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo
      - name: Run tests
        run: bundle exec rake cargo:test
      - name: Run examples
        run: bundle exec rake cargo:examples

  lint:
    name: cargo:lint
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: head
          bundler-cache: true
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.71.1"
          components: clippy, rustfmt
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo--${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo
      - name: rake cargo:build
        run: bundle exec rake cargo:build
      - name: rake cargo:lint
        run: bundle exec rake cargo:lint

  sanitize:
    name: cargo:sanitize:${{ matrix.sanitizer }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [leak, address]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: head
          bundler-cache: true
      - name: rake cargo:build
        run: bundle exec rake cargo:build
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2023-10-24
          target: "x86_64-unknown-linux-gnu"
          components: "rust-src"
      - name: Test with sanitizer
        run: bundle exec rake cargo:sanitize:${{ matrix.sanitizer }}

  # We need to figure out what to do here. When you run publish it checks
  # against the latest version published to crates, which means if we have any
  # breaking changes in the bindings then this fails.
  #
  # publish:
  #   name: cargo:publish
  #   strategy:
  #     fail-fast: false
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: head
  #         bundler-cache: true
  #     - name: Set up Rust
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: "1.71.1"
  #         targets: wasm32-wasi
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
  #           ${{ runner.os }}-cargo
  #     - name: Publish crates (dry-run)
  #       run: bundle exec rake cargo:publish:dry
