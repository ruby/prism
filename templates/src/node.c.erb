#line <%= __LINE__ + 1 %> "<%= File.basename(__FILE__) %>"
#include "yarp/node.h"

// Deallocate the space for a yp_node_t. Similarly to yp_node_alloc, we're not
// using the parser argument, but it's there to allow for the future possibility
// of pre-allocating larger memory pools.
void
yp_node_destroy(yp_parser_t *parser, yp_node_t *node) {
    switch (node->type) {
        <%- nodes.each do |node| -%>
        <%- next unless node.params.any? { |param| [NodeParam, OptionalNodeParam, StringParam, NodeListParam, LocationListParam, ConstantListParam].include?(param.class) } -%>
#line <%= __LINE__ + 1 %> "<%= File.basename(__FILE__) %>"
        case <%= node.type %>: {
            yp_<%= node.human %>_t *cast = (yp_<%= node.human %>_t *) node;
            <%- node.params.each do |param| -%>
            <%- case param -%>
            <%- when LocationParam, OptionalLocationParam, UInt32Param, ConstantParam -%>
            <%- when NodeParam -%>
            yp_node_destroy(parser, (yp_node_t *) cast-><%= param.name %>);
            <%- when OptionalNodeParam -%>
            if (cast-><%= param.name %> != NULL) {
                yp_node_destroy(parser, (yp_node_t *) cast-><%= param.name %>);
            }
            <%- when StringParam -%>
            yp_string_free(&cast-><%= param.name %>);
            <%- when NodeListParam -%>
            if (cast-><%= param.name %>.capacity > 0) {
                for (size_t index = 0; index < cast-><%= param.name %>.size; index++) {
                    yp_node_destroy(parser, cast-><%= param.name %>.nodes[index]);
                }
                free(cast-><%= param.name %>.nodes);
            }
            <%- when LocationListParam -%>
            if (cast-><%= param.name %>.locations != NULL) {
                free(cast-><%= param.name %>.locations);
            }
            <%- when ConstantListParam -%>
            yp_constant_id_list_free(&cast-><%= param.name %>);
            <%- else -%>
            <%- raise -%>
            <%- end -%>
            <%- end -%>
            break;
        }
        <%- end -%>
#line <%= __LINE__ + 1 %> "<%= File.basename(__FILE__) %>"
        default:
            break;
    }
    free(node);
}
