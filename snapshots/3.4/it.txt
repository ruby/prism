@ ProgramNode (location: (1,0)-(5,9))
├── flags: ∅
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(5,9))
    ├── flags: ∅
    └── body: (length: 2)
        ├── @ CallNode (location: (1,0)-(3,3))
        │   ├── flags: newline, ignore_visibility
        │   ├── receiver: ∅
        │   ├── call_operator_loc: ∅
        │   ├── name: :x
        │   ├── message_loc: (1,0)-(1,1) = "x"
        │   ├── opening_loc: ∅
        │   ├── arguments: ∅
        │   ├── closing_loc: ∅
        │   ├── equal_loc: ∅
        │   └── block:
        │       @ BlockNode (location: (1,2)-(3,3))
        │       ├── flags: ∅
        │       ├── locals: []
        │       ├── parameters:
        │       │   @ ItParametersNode (location: (1,2)-(3,3))
        │       │   └── flags: ∅
        │       ├── body:
        │       │   @ StatementsNode (location: (2,2)-(2,4))
        │       │   ├── flags: ∅
        │       │   └── body: (length: 1)
        │       │       └── @ ItLocalVariableReadNode (location: (2,2)-(2,4))
        │       │           └── flags: newline
        │       ├── opening_loc: (1,2)-(1,4) = "do"
        │       └── closing_loc: (3,0)-(3,3) = "end"
        └── @ LambdaNode (location: (5,0)-(5,9))
            ├── flags: newline
            ├── locals: []
            ├── operator_loc: (5,0)-(5,2) = "->"
            ├── opening_loc: (5,3)-(5,4) = "{"
            ├── closing_loc: (5,8)-(5,9) = "}"
            ├── parameters:
            │   @ ItParametersNode (location: (5,0)-(5,9))
            │   └── flags: ∅
            └── body:
                @ StatementsNode (location: (5,5)-(5,7))
                ├── flags: ∅
                └── body: (length: 1)
                    └── @ ItLocalVariableReadNode (location: (5,5)-(5,7))
                        └── flags: newline
